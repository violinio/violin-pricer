{
  "address": "0x393c80eD875eDe4dc9da8E5C9CA8959c5A36d6b4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IPricer",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IPricer",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "ImplementationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousPendingOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "PendingOwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "metadata",
          "type": "bytes[]"
        }
      ],
      "name": "getPrices",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "metadata",
          "type": "bytes[]"
        }
      ],
      "name": "getValues",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "contract IPricer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPricer",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "setImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "setPendingOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9f1e22759219743574e2c41f0953696ba9345f179682e168ccf7279e3d254f4a",
  "receipt": {
    "to": "0xdbfD940f57E63049039404c1b35b9e47e90F2B3e",
    "from": "0xa66745F0092F7460F107E4c66C224553bF4Cd727",
    "contractAddress": null,
    "transactionIndex": 2,
    "gasUsed": "773987",
    "logsBloom": "0x
    "blockHash": "0x06c2f79081a264cd5fb2cfa2c0e7613634f184ab3c46eba5a53d4331ec984548",
    "transactionHash": "0x9f1e22759219743574e2c41f0953696ba9345f179682e168ccf7279e3d254f4a",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 5951886,
        "transactionHash": "0x9f1e22759219743574e2c41f0953696ba9345f179682e168ccf7279e3d254f4a",
        "address": "0x393c80eD875eDe4dc9da8E5C9CA8959c5A36d6b4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dbfd940f57e63049039404c1b35b9e47e90f2b3e"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x06c2f79081a264cd5fb2cfa2c0e7613634f184ab3c46eba5a53d4331ec984548"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 5951886,
        "transactionHash": "0x9f1e22759219743574e2c41f0953696ba9345f179682e168ccf7279e3d254f4a",
        "address": "0x393c80eD875eDe4dc9da8E5C9CA8959c5A36d6b4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000dbfd940f57e63049039404c1b35b9e47e90f2b3e",
          "0x000000000000000000000000a66745f0092f7460f107e4c66c224553bf4cd727"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x06c2f79081a264cd5fb2cfa2c0e7613634f184ab3c46eba5a53d4331ec984548"
      }
    ],
    "blockNumber": 5951886,
    "cumulativeGasUsed": "950203",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa66745F0092F7460F107E4c66C224553bF4Cd727"
  ],
  "solcInputHash": "947ca64d07a9324843b8615b78da14fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IPricer\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IPricer\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousPendingOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"contract IPricer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPricer\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"It forwards all requests blindly to the implementation, this allows the implementation to change over time.\",\"kind\":\"dev\",\"methods\":{\"getValue(address,uint256,bytes)\":{\"params\":{\"metadata\":\"Can contain metadata about non ERC20 assets, like the token id of erc1155.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setImplementation(address)\":{\"details\":\"Can only be called by the contract owner.\",\"params\":{\"_implementation\":\"The new implementation.\"}},\"setPendingOwner(address)\":{\"details\":\"Sets the pendingOwner, ownership is only transferred when they call transferOwnership. Can only be called by the current owner.\"},\"transferOwnership()\":{\"details\":\"Transfers ownership of the contract to the pendingOwner. Can only be called by the pendingOwner.\"}},\"stateVariables\":{\"implementation\":{\"details\":\"The implementation that actually executes the pricing requests.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice(address,bytes)\":{\"notice\":\"Returns the dollar value of the `amount` of one full unit (10^decimals) of `asset` at the current spot price. Returned value is in 1e18.\"},\"getPrices(address[],bytes[])\":{\"notice\":\"Calls getPrice for all provided assets. Input parameters must be equal length.\"},\"getValue(address,uint256,bytes)\":{\"notice\":\"Returns the dollar value of the `amount` of `asset` at the current spot price. Returned value is in 1e18.\"},\"getValues(address[],uint256[],bytes[])\":{\"notice\":\"calls getValue for all provided assets. Input parameters must be equal length.\"},\"setImplementation(address)\":{\"notice\":\"Sets the underlying implementation that fulfills the swap orders.\"}},\"notice\":\"The Pricer allows contracts and frontends to efficiently fetch asset prices.Initially it is only meant to fetch ERC-20 prices but over time the metadata parameter could be used to allow for different types of assets like ERC-1155.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pricer.sol\":\"Pricer\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Pricer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./dependencies/Ownable.sol\\\";\\nimport \\\"./interfaces/IPricer.sol\\\";\\n\\n/// @notice The Pricer allows contracts and frontends to efficiently fetch asset prices.\\n/// @notice Initially it is only meant to fetch ERC-20 prices but over time the metadata parameter could be used to allow for different types of assets like ERC-1155.\\n/// @dev It forwards all requests blindly to the implementation, this allows the implementation to change over time.\\ncontract Pricer is IPricer, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    /// @dev The implementation that actually executes the pricing requests.\\n    IPricer public implementation;\\n\\n    event ImplementationChanged(\\n        IPricer indexed oldImplementation,\\n        IPricer indexed newImplementation\\n    );\\n\\n    constructor(address _owner) {\\n        _transferOwnership(_owner);\\n    }\\n\\n    /// @notice Returns the dollar value of the `amount` of `asset` at the current spot price. Returned value is in 1e18.\\n    /// @param metadata Can contain metadata about non ERC20 assets, like the token id of erc1155.\\n    function getValue(\\n        address asset,\\n        uint256 amount,\\n        bytes calldata metadata\\n    ) external view override returns (uint256) {\\n        return implementation.getValue(asset, amount, metadata);\\n    }\\n\\n    /// @notice calls getValue for all provided assets. Input parameters must be equal length.\\n    function getValues(\\n        address[] calldata assets,\\n        uint256[] calldata amounts,\\n        bytes[] calldata metadata\\n    ) external view override returns (uint256[] memory) {\\n        return implementation.getValues(assets, amounts, metadata);\\n    }\\n\\n    /// @notice Returns the dollar value of the `amount` of one full unit (10^decimals) of `asset` at the current spot price. Returned value is in 1e18.\\n    function getPrice(address asset, bytes calldata metadata)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        return implementation.getPrice(asset, metadata);\\n    }\\n\\n    /// @notice Calls getPrice for all provided assets. Input parameters must be equal length.\\n    function getPrices(address[] calldata assets, bytes[] calldata metadata)\\n        external\\n        view\\n        override\\n        returns (uint256[] memory)\\n    {\\n        return implementation.getPrices(assets, metadata);\\n    }\\n\\n    /**\\n     * @notice Sets the underlying implementation that fulfills the swap orders.\\n     * @dev Can only be called by the contract owner.\\n     * @param _implementation The new implementation.\\n     */\\n    function setImplementation(IPricer _implementation) external onlyOwner {\\n        IPricer oldImplementation = implementation;\\n        implementation = _implementation;\\n\\n        emit ImplementationChanged(oldImplementation, _implementation);\\n    }\\n}\\n\",\"keccak256\":\"0x992dda541a70d39ac0bf204b1f2f8132aec754f829e615b67a89b43d84518243\",\"license\":\"MIT\"},\"contracts/dependencies/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Derived from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/1b27c13096d6e4389d62e7b0766a1db53fbb3f1b/contracts/access/Ownable.sol\\n// Adds pending owner\\n\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n    address public pendingOwner;\\n\\n    event PendingOwnershipTransferred(address indexed previousPendingOwner, address indexed newPendingOwner);\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to the pendingOwner.\\n     * Can only be called by the pendingOwner.\\n     */\\n    function transferOwnership() public virtual {\\n        require(_msgSender() == pendingOwner, \\\"Ownable: caller is not the pendingOwner\\\");\\n        require(pendingOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(pendingOwner);\\n    }\\n\\n    /**\\n     * @dev Sets the pendingOwner, ownership is only transferred when they call transferOwnership.\\n     * Can only be called by the current owner.\\n     */\\n    function setPendingOwner(address newPendingOwner) external onlyOwner {\\n        address oldPendingOwner = pendingOwner;\\n        pendingOwner = newPendingOwner;\\n\\n        emit PendingOwnershipTransferred(oldPendingOwner, pendingOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        pendingOwner = address(0);\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\",\"keccak256\":\"0x493c2f9ef5068b4803b58fbfba6dc3e58da14f6efd827fc7c7855853486622ab\",\"license\":\"MIT\"},\"contracts/interfaces/IPricer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice The Pricer allows contracts and frontends to efficiently fetch asset prices. Initially it is only meant to fetch ERC-20 prices but over time the metadata parameter could be used to allow for different types of assets like ERC-1155.\\ninterface IPricer {\\n    /// @notice Returns the dollar value of the `amount` of `asset` at the current spot price. Returned value is in 1e18.\\n    /// @param metadata Can contain metadata about non ERC20 assets, like the token id of erc1155.\\n    function getValue(\\n        address asset,\\n        uint256 amount,\\n        bytes calldata metadata\\n    ) external view returns (uint256);\\n\\n    /// @notice calls getValue for all provided assets. Input parameters must be equal length.\\n    function getValues(\\n        address[] calldata assets,\\n        uint256[] calldata amounts,\\n        bytes[] calldata metadata\\n    ) external view returns (uint256[] memory);\\n\\n    /// @notice Returns the dollar value of the `amount` of one full unit (10^decimals) of `asset` at the current spot price. Returned value is in 1e18.\\n    function getPrice(address asset, bytes calldata metadata)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Calls getPrice for all provided assets. Input parameters must be equal length.\\n    function getPrices(address[] calldata assets, bytes[] calldata metadata)\\n        external\\n        view\\n        returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0xd626bf0fa81b17b5837af43b02362ad1ab25598baa9047b19216bfb4e0aabb78\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d50380380610d5083398101604081905261002f916100a1565b61003833610047565b61004181610047565b506100d1565b600080546001600160a01b038381166001600160a01b031980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100b357600080fd5b81516001600160a01b03811681146100ca57600080fd5b9392505050565b610c70806100e06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610124578063c42069ec14610135578063cfa26d9414610148578063d62cdd1714610168578063d784d4261461017b578063e30c39781461018e57600080fd5b80634b3617ae146100ae5780635c60da1b146100d4578063715018a6146100ff578063880ad0af146101095780638ac06f5014610111575b600080fd5b6100c16100bc36600461076a565b6101a1565b6040519081526020015b60405180910390f35b6002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020016100cb565b610107610231565b005b610107610270565b6100c161011f366004610715565b61035f565b6000546001600160a01b03166100e7565b6101076101433660046106f1565b6103ec565b61015b6101563660046107c6565b610468565b6040516100cb9190610b93565b61015b610176366004610826565b6104f3565b6101076101893660046106f1565b61058d565b6001546100e7906001600160a01b031681565b60025460405163259b0bd760e11b81526000916001600160a01b031690634b3617ae906101d8908890889088908890600401610aca565b60206040518083038186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102289190610985565b95945050505050565b6000546001600160a01b031633146102645760405162461bcd60e51b815260040161025b90610bd7565b60405180910390fd5b61026e6000610609565b565b6001546001600160a01b0316336001600160a01b0316146102e35760405162461bcd60e51b815260206004820152602760248201527f4f776e61626c653a2063616c6c6572206973206e6f74207468652070656e64696044820152663733a7bbb732b960c91b606482015260840161025b565b6001546001600160a01b031661034a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025b565b60015461026e906001600160a01b0316610609565b6002546040516308ac06f560e41b81526000916001600160a01b031690638ac06f509061039490879087908790600401610aa5565b60206040518083038186803b1580156103ac57600080fd5b505afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190610985565b949350505050565b6000546001600160a01b031633146104165760405162461bcd60e51b815260040161025b90610bd7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f1e1c2f9f5b763f63f56cae5a9a406c263521f324917ae0fe29e5cf9955e81ec890600090a35050565b6002546040516333e89b6560e21b81526060916001600160a01b03169063cfa26d949061049f908890889088908890600401610afc565b60006040518083038186803b1580156104b757600080fd5b505afa1580156104cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022891908101906108c0565b60025460405163d62cdd1760e01b81526060916001600160a01b03169063d62cdd179061052e908a908a908a908a908a908a90600401610b23565b60006040518083038186803b15801561054657600080fd5b505afa15801561055a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261058291908101906108c0565b979650505050505050565b6000546001600160a01b031633146105b75760405162461bcd60e51b815260040161025b90610bd7565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d390600090a35050565b600080546001600160a01b038381166001600160a01b031980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f84011261067557600080fd5b50813567ffffffffffffffff81111561068d57600080fd5b6020830191508360208260051b85010111156106a857600080fd5b9250929050565b60008083601f8401126106c157600080fd5b50813567ffffffffffffffff8111156106d957600080fd5b6020830191508360208285010111156106a857600080fd5b60006020828403121561070357600080fd5b813561070e81610c22565b9392505050565b60008060006040848603121561072a57600080fd5b833561073581610c22565b9250602084013567ffffffffffffffff81111561075157600080fd5b61075d868287016106af565b9497909650939450505050565b6000806000806060858703121561078057600080fd5b843561078b81610c22565b935060208501359250604085013567ffffffffffffffff8111156107ae57600080fd5b6107ba878288016106af565b95989497509550505050565b600080600080604085870312156107dc57600080fd5b843567ffffffffffffffff808211156107f457600080fd5b61080088838901610663565b9096509450602087013591508082111561081957600080fd5b506107ba87828801610663565b6000806000806000806060878903121561083f57600080fd5b863567ffffffffffffffff8082111561085757600080fd5b6108638a838b01610663565b9098509650602089013591508082111561087c57600080fd5b6108888a838b01610663565b909650945060408901359150808211156108a157600080fd5b506108ae89828a01610663565b979a9699509497509295939492505050565b600060208083850312156108d357600080fd5b825167ffffffffffffffff808211156108eb57600080fd5b818501915085601f8301126108ff57600080fd5b81518181111561091157610911610c0c565b8060051b604051601f19603f8301168101818110858211171561093657610936610c0c565b604052828152858101935084860182860187018a101561095557600080fd5b600095505b8386101561097857805185526001959095019493860193860161095a565b5098975050505050505050565b60006020828403121561099757600080fd5b5051919050565b8183526000602080850194508260005b858110156109dc5781356109c181610c22565b6001600160a01b0316875295820195908201906001016109ae565b509495945050505050565b60008383855260208086019550808560051b8301018460005b87811015610a6f57848303601f19018952813536889003601e19018112610a2657600080fd5b8701803567ffffffffffffffff811115610a3f57600080fd5b803603891315610a4e57600080fd5b610a5b8582888501610a7c565b9a86019a9450505090830190600101610a00565b5090979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03841681526040602082018190526000906102289083018486610a7c565b60018060a01b0385168152836020820152606060408201526000610af2606083018486610a7c565b9695505050505050565b604081526000610b1060408301868861099e565b82810360208401526105828185876109e7565b606081526000610b3760608301888a61099e565b82810360208401528581526001600160fb1b03861115610b5657600080fd5b8560051b8088602084013780820191505060208101600081526020848303016040850152610b858186886109e7565b9a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610bcb57835183529284019291840191600101610baf565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c3757600080fd5b5056fea26469706673582212204250828cb6905fd6577d6aa2eb225e5119420e6cb9d8814b2f7f64e5b91cd4cc64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610124578063c42069ec14610135578063cfa26d9414610148578063d62cdd1714610168578063d784d4261461017b578063e30c39781461018e57600080fd5b80634b3617ae146100ae5780635c60da1b146100d4578063715018a6146100ff578063880ad0af146101095780638ac06f5014610111575b600080fd5b6100c16100bc36600461076a565b6101a1565b6040519081526020015b60405180910390f35b6002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020016100cb565b610107610231565b005b610107610270565b6100c161011f366004610715565b61035f565b6000546001600160a01b03166100e7565b6101076101433660046106f1565b6103ec565b61015b6101563660046107c6565b610468565b6040516100cb9190610b93565b61015b610176366004610826565b6104f3565b6101076101893660046106f1565b61058d565b6001546100e7906001600160a01b031681565b60025460405163259b0bd760e11b81526000916001600160a01b031690634b3617ae906101d8908890889088908890600401610aca565b60206040518083038186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102289190610985565b95945050505050565b6000546001600160a01b031633146102645760405162461bcd60e51b815260040161025b90610bd7565b60405180910390fd5b61026e6000610609565b565b6001546001600160a01b0316336001600160a01b0316146102e35760405162461bcd60e51b815260206004820152602760248201527f4f776e61626c653a2063616c6c6572206973206e6f74207468652070656e64696044820152663733a7bbb732b960c91b606482015260840161025b565b6001546001600160a01b031661034a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025b565b60015461026e906001600160a01b0316610609565b6002546040516308ac06f560e41b81526000916001600160a01b031690638ac06f509061039490879087908790600401610aa5565b60206040518083038186803b1580156103ac57600080fd5b505afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190610985565b949350505050565b6000546001600160a01b031633146104165760405162461bcd60e51b815260040161025b90610bd7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f1e1c2f9f5b763f63f56cae5a9a406c263521f324917ae0fe29e5cf9955e81ec890600090a35050565b6002546040516333e89b6560e21b81526060916001600160a01b03169063cfa26d949061049f908890889088908890600401610afc565b60006040518083038186803b1580156104b757600080fd5b505afa1580156104cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022891908101906108c0565b60025460405163d62cdd1760e01b81526060916001600160a01b03169063d62cdd179061052e908a908a908a908a908a908a90600401610b23565b60006040518083038186803b15801561054657600080fd5b505afa15801561055a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261058291908101906108c0565b979650505050505050565b6000546001600160a01b031633146105b75760405162461bcd60e51b815260040161025b90610bd7565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d390600090a35050565b600080546001600160a01b038381166001600160a01b031980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f84011261067557600080fd5b50813567ffffffffffffffff81111561068d57600080fd5b6020830191508360208260051b85010111156106a857600080fd5b9250929050565b60008083601f8401126106c157600080fd5b50813567ffffffffffffffff8111156106d957600080fd5b6020830191508360208285010111156106a857600080fd5b60006020828403121561070357600080fd5b813561070e81610c22565b9392505050565b60008060006040848603121561072a57600080fd5b833561073581610c22565b9250602084013567ffffffffffffffff81111561075157600080fd5b61075d868287016106af565b9497909650939450505050565b6000806000806060858703121561078057600080fd5b843561078b81610c22565b935060208501359250604085013567ffffffffffffffff8111156107ae57600080fd5b6107ba878288016106af565b95989497509550505050565b600080600080604085870312156107dc57600080fd5b843567ffffffffffffffff808211156107f457600080fd5b61080088838901610663565b9096509450602087013591508082111561081957600080fd5b506107ba87828801610663565b6000806000806000806060878903121561083f57600080fd5b863567ffffffffffffffff8082111561085757600080fd5b6108638a838b01610663565b9098509650602089013591508082111561087c57600080fd5b6108888a838b01610663565b909650945060408901359150808211156108a157600080fd5b506108ae89828a01610663565b979a9699509497509295939492505050565b600060208083850312156108d357600080fd5b825167ffffffffffffffff808211156108eb57600080fd5b818501915085601f8301126108ff57600080fd5b81518181111561091157610911610c0c565b8060051b604051601f19603f8301168101818110858211171561093657610936610c0c565b604052828152858101935084860182860187018a101561095557600080fd5b600095505b8386101561097857805185526001959095019493860193860161095a565b5098975050505050505050565b60006020828403121561099757600080fd5b5051919050565b8183526000602080850194508260005b858110156109dc5781356109c181610c22565b6001600160a01b0316875295820195908201906001016109ae565b509495945050505050565b60008383855260208086019550808560051b8301018460005b87811015610a6f57848303601f19018952813536889003601e19018112610a2657600080fd5b8701803567ffffffffffffffff811115610a3f57600080fd5b803603891315610a4e57600080fd5b610a5b8582888501610a7c565b9a86019a9450505090830190600101610a00565b5090979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03841681526040602082018190526000906102289083018486610a7c565b60018060a01b0385168152836020820152606060408201526000610af2606083018486610a7c565b9695505050505050565b604081526000610b1060408301868861099e565b82810360208401526105828185876109e7565b606081526000610b3760608301888a61099e565b82810360208401528581526001600160fb1b03861115610b5657600080fd5b8560051b8088602084013780820191505060208101600081526020848303016040850152610b858186886109e7565b9a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610bcb57835183529284019291840191600101610baf565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c3757600080fd5b5056fea26469706673582212204250828cb6905fd6577d6aa2eb225e5119420e6cb9d8814b2f7f64e5b91cd4cc64736f6c63430008060033",
  "devdoc": {
    "details": "It forwards all requests blindly to the implementation, this allows the implementation to change over time.",
    "kind": "dev",
    "methods": {
      "getValue(address,uint256,bytes)": {
        "params": {
          "metadata": "Can contain metadata about non ERC20 assets, like the token id of erc1155."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setImplementation(address)": {
        "details": "Can only be called by the contract owner.",
        "params": {
          "_implementation": "The new implementation."
        }
      },
      "setPendingOwner(address)": {
        "details": "Sets the pendingOwner, ownership is only transferred when they call transferOwnership. Can only be called by the current owner."
      },
      "transferOwnership()": {
        "details": "Transfers ownership of the contract to the pendingOwner. Can only be called by the pendingOwner."
      }
    },
    "stateVariables": {
      "implementation": {
        "details": "The implementation that actually executes the pricing requests."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPrice(address,bytes)": {
        "notice": "Returns the dollar value of the `amount` of one full unit (10^decimals) of `asset` at the current spot price. Returned value is in 1e18."
      },
      "getPrices(address[],bytes[])": {
        "notice": "Calls getPrice for all provided assets. Input parameters must be equal length."
      },
      "getValue(address,uint256,bytes)": {
        "notice": "Returns the dollar value of the `amount` of `asset` at the current spot price. Returned value is in 1e18."
      },
      "getValues(address[],uint256[],bytes[])": {
        "notice": "calls getValue for all provided assets. Input parameters must be equal length."
      },
      "setImplementation(address)": {
        "notice": "Sets the underlying implementation that fulfills the swap orders."
      }
    },
    "notice": "The Pricer allows contracts and frontends to efficiently fetch asset prices.Initially it is only meant to fetch ERC-20 prices but over time the metadata parameter could be used to allow for different types of assets like ERC-1155.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6033,
        "contract": "contracts/Pricer.sol:Pricer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6035,
        "contract": "contracts/Pricer.sol:Pricer",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4971,
        "contract": "contracts/Pricer.sol:Pricer",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IPricer)6227"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IPricer)6227": {
        "encoding": "inplace",
        "label": "contract IPricer",
        "numberOfBytes": "20"
      }
    }
  }
}